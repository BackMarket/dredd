version: 2.1

commands:
  pip-install-docs:
    steps:
      - run: echo $(python --version) > .python-version
      - restore_cache:
          key: py-deps-{{ checksum ".python-version" }}-{{ checksum "./docs/requirements.txt" }}
      - run: 'if [ ! -d ./venv ]; then python -m venv ./venv; fi'
      - run: echo "source $(pwd)/venv/bin/activate" >> $BASH_ENV
      - run: pip install -r ./docs/requirements.txt
      - save_cache:
          key: py-deps-{{ checksum "./docs/requirements.txt" }}
          paths:
            - ./venv

aliases:
  -   - &id001
        run: yarn install --frozen-lockfile

  - &node12
    image: circleci/node:12

                 # using Python 3.6 as that's the version ReadTheDocs is running
  - &python-docs
    image: circleci/python:3.6-node

  - &test-steps
    steps:
      - checkout
      - <<: *id001
      - run: yarn build
      - run: yarn test

jobs:
  test-node14:
    docker: [{image: circleci/node:14}]
    <<: *test-steps

  test-node12:
    docker: [{<<: *node12}]
    <<: *test-steps

  test-node10:
    docker: [{image: circleci/node:10}]
    <<: *test-steps

  test-e2e-apib:
    docker: [{<<: *node12}]
    steps:
      - checkout
      - <<: *id001
      - run: yarn build
      - run: npx lerna exec --scope="dredd" yarn e2e:apib

  test-e2e-openapi2:
    docker: [{<<: *node12}]
    steps:
      - checkout
      - <<: *id001
      - run: yarn build
      - run: npx lerna exec --scope="dredd" yarn e2e:openapi2

  quality-checks:
    docker: [{<<: *python-docs}]
    steps:
      - checkout
      - <<: *id001
      - pip-install-docs
      - run: yarn lint
      - run: yarn commit:lint
      - run: yarn docs:lint
      - run: yarn docs:test-extensions

  format-check:
    docker: [{<<: *node12}]
    steps:
      - checkout
      - <<: *id001
      - run: yarn prettify:check

  docs-dry-run:
    # 'dry run', because production build happens directly on the ReadTheDocs
    # infrastructure
    docker: [{<<: *python-docs}]
    steps:
      - checkout
      - <<: *id001
      - pip-install-docs
      - run: yarn docs:build

  smoke-tests:
    docker:
      - <<: *node12
      - image: circleci/mongo:latest
    steps:
      - checkout
      - <<: *id001
      - run: yarn test:smoke

workflows:
  version: 2
  test:
    jobs:
      - format-check
      - quality-checks
      - test-node14
      - test-node12
      - test-node10
      - test-e2e-apib
      - test-e2e-openapi2
      - smoke-tests
      - docs-dry-run
